

1/13/2011  (version 0.6)

- added an extension for top-down car physics and game mechanics, called TopDown

- updates and corrections to the manual

- added a class heirarchy to documentation folder

- included generated documentation on svn (before you had to generate it yourself).

- fixed a bug with changing the mass of an in-world object from not zero to zero and vice versa

- exposed several more things from box2d, namely continuous physics for qb2world, and more stuff to query/set through contact events.

- made a base class for qb2ContactEvent and qb2SubContactEvent called qb2BaseContactEvent to consolidate some of the similar parts of their API's.

- changed around some component properties for various proxies, fixed some formatting and typos

- made qb2DebugPanel remember your settings locally and cleaned up a lot of code in qb2DebugPanel

- added car example to qb2DemoReel

- got rid of qb2IDrawable and the interfaces package, moved qb2IRigidObject to tangibles package

- added qb2Preloader...just a generic preloader that you extend from to define your "main" class...useful for just rapid prototypes until you implement a fancier one

- added class hierarchy to docs folder

- added event types to qb2AddRemoveEvent that allow you to listen for when a descendant of a container adds/removes an object.

- added qb2EventDispatcher to QuickB2.events in order to make QuickB2's optimized event dispatching system more easily available to subclasses and extensions, especially those not in the qb2Object class hierarchy...previously qb2Object did all the work

- implemented frictionZ...interface was there, but didn't do anything

- added qb2Terrain to QuickB2.stock.  Adding a terrain to your world is a way for frictionZ to be modified automatically, like you can create a lake that sets an object's frictionZ be much lower whenever it's over the lake.

- moved the clone function so it's declared virtually in qb2Object, instead of seperately in qb2Tangible and qb2Joint.

- added a distanceTo function to qb2Tangible...finds the shortest distance between two tangibles' geometry and optionally outputs the closest points and the vector seperating them